on:
  push:
    branches: [ "new-version" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USER }}/kfc_support_bot:latest

jobs:
    publish:
        name: publish image
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3
        - name: create-json
          id: create-json
          uses: jsdaniell/create-json@v1.2.2
          with:
            name: "logging_config.json"
            json: ${{ secrets.LOGGING_JSON }}
            dir: "config/"
        - name: Login
          run: |
            echo ${{ secrets.PAT }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
        - name: Build and Publish
          run: |
            docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    deploy:
      needs: publish
      name: deploy image
      runs-on: ubuntu-latest

      steps:
        - name: install ssh keys
          run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        - name: connect and pull
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && ./docker_deploy.sh && exit"
        - name: cleanup
          run: rm -rf ~/.ssh