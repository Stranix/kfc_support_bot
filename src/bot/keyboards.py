import logging

from aiogram.types import InlineKeyboardMarkup, ReplyKeyboardMarkup, \
    KeyboardButton
from aiogram.types import InlineKeyboardButton

logger = logging.getLogger('support_bot')


async def get_choice_tr_keyboard():
    logger.debug('–°–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Ç—Ä–∞–Ω–∑–∏—Ç–æ–≤ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏')
    inline_keyboard = [
        [
            InlineKeyboardButton(text='YUM!', callback_data='tr_yum'),
            InlineKeyboardButton(text='IRB', callback_data='tr_irb'),
            InlineKeyboardButton(text='FZ', callback_data='tr_fz'),
        ],
        [
            InlineKeyboardButton(text='–í—Å–µ', callback_data='tr_all'),
            InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def get_choice_rest_sync_keyboard():
    logger.debug('–°–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤')
    inline_keyboard = [
        [
            InlineKeyboardButton(text='–ü–æ –°–ø–∏—Å–∫—É', callback_data='rest_list'),
            InlineKeyboardButton(text='–ì—Ä—É–ø–ø—É', callback_data='rest_group'),
            InlineKeyboardButton(text='–í—Å–µ', callback_data='rest_all'),
        ],
        [
            InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def get_choice_rest_owner_keyboard():
    logger.debug('–°–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –¥–ª—è —Å–∏–Ω—Ö—Ä—ã')
    inline_keyboard = [
        [
            InlineKeyboardButton(text='YUM!', callback_data='rest_yum'),
            InlineKeyboardButton(text='IRB', callback_data='rest_irb'),
        ],
        [
            InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def get_report_keyboard(report_id: int):
    logger.debug('–°–æ–∑–¥–∞—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏')
    inline_keyboard = [
        [
            InlineKeyboardButton(
                text='üìã –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç',
                callback_data=f'report_{report_id}',
            ),
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def get_task_keyboard(task_id: int):
    logger.debug('–°–æ–∑–¥–∞—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–∫–∞–∑–∞ –∑–∞–¥–∞—á')
    inline_keyboard = [
        [
            InlineKeyboardButton(
                text='üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—ë –ø–∏—Å—å–º–æ',
                callback_data=f'task_{task_id}',
            ),
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def get_user_activate_keyboard(user_id: int):
    logger.debug('–°–æ–∑–¥–∞—é –∫–Ω–æ–ø–∫—É –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏  –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    inline_keyboard = [
        [
            InlineKeyboardButton(
                text='üë§ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å?',
                callback_data=f'activate_{user_id}',
            ),
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def get_shift_management_keyboard():
    logger.debug('–°–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–º–µ–Ω–æ–π')
    inline_keyboard = [
        [
            InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å', callback_data='break_start'),
            InlineKeyboardButton(text='–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data='break_stop'),
        ],
        [
            InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def create_tg_keyboard_markup(
        buttons_text: list,
        buttons_per_row: int = 3,
) -> ReplyKeyboardMarkup:
    keyboard_buttons = [KeyboardButton(text=text) for text in buttons_text]

    rows = [
        keyboard_buttons[i:i + buttons_per_row] for i in
        range(0, len(keyboard_buttons), buttons_per_row)
    ]

    return ReplyKeyboardMarkup(
        keyboard=rows,
        resize_keyboard=True,
        one_time_keyboard=True
    )


async def get_support_task_keyboard(task_id: int):
    logger.debug('–°–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∏–Ω–∂–µ–Ω–µ—Ä–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏')
    inline_keyboard = [
        [
            InlineKeyboardButton(
                text='–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É',
                callback_data=f'stask_{task_id}'
            ),
        ],
        [
            InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def get_approved_task_keyboard(task_number: str):
    logger.debug('–°–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏')
    inline_keyboard = [
        [
            InlineKeyboardButton(
                text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
                callback_data=f'approved_new_task-{task_number}',
            ),
            InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel'),
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
