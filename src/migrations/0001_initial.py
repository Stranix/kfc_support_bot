# Generated by Django 4.2.4 on 2023-09-01 11:34

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('tg_id', models.PositiveSmallIntegerField(db_index=True, unique=True, verbose_name='Telegram_id')),
                ('registered_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активен?')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='FranchiseOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Имя франшизы')),
                ('alias', models.CharField(max_length=10, verbose_name='Alias')),
            ],
            options={
                'verbose_name': 'Франшиза',
                'verbose_name_plural': 'Франшизы',
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Имя ресторана')),
                ('legal_entity', models.CharField(blank=True, max_length=100, null=True, verbose_name='Юр лицо')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(db_index=True, max_length=128, region=None, verbose_name='Номер телефона')),
                ('is_sync', models.BooleanField(default=False, verbose_name='Синхронизация?')),
                ('franchise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurants', to='src.franchiseowner', verbose_name='Франшиза')),
            ],
            options={
                'verbose_name': 'Ресторан',
                'verbose_name_plural': 'Рестораны',
            },
        ),
        migrations.CreateModel(
            name='Right',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя права')),
            ],
            options={
                'verbose_name': 'Право',
                'verbose_name_plural': 'Права',
            },
        ),
        migrations.CreateModel(
            name='ServerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Тип сервера RK')),
            ],
            options={
                'verbose_name': 'Тип сервера',
                'verbose_name_plural': 'Типы Серверов',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant', models.CharField(max_length=100, verbose_name='Заявитель')),
                ('number', models.CharField(db_index=True, max_length=25, unique=True, verbose_name='Номер заявки GSD')),
                ('start_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('expired_at', models.DateTimeField(blank=True, null=True, verbose_name='Срок обработки')),
                ('finish_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата закрытия')),
                ('priority', models.CharField(choices=[('LOW', 'Низкий'), ('MID', 'Средний'), ('HIGH', 'Высокий'), ('CRITICAL', 'Критичный')], db_index=True, default='LOW', max_length=20, verbose_name='Приоритет')),
                ('service', models.CharField(max_length=100, verbose_name='Услуга')),
                ('title', models.CharField(max_length=150, verbose_name='Тема обращения')),
                ('description', models.TextField(verbose_name='Полное описание')),
                ('status', models.CharField(choices=[('NEW', 'Новая'), ('ASSIGNED', 'Назначена'), ('IN_WORK', 'В работе'), ('SUSPENDED', 'Приостановлена'), ('COMPLETED', 'Завершена')], db_index=True, default='NEW', max_length=20, verbose_name='Статус')),
                ('gsd_group', models.CharField(blank=True, max_length=50, null=True, verbose_name='Группа GSD')),
                ('performer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tasks', to='src.employee', verbose_name='Исполнитель')),
                ('restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tasks', to='src.restaurant', verbose_name='Ресторан')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
            },
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('author', models.CharField(max_length=150, verbose_name='Автор комментария')),
                ('group_gsd', models.CharField(blank=True, max_length=100, null=True, verbose_name='Группа GSD')),
                ('time_comment', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата комментария')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='src.task', verbose_name='Задача номер')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Имя сервера')),
                ('ident', models.PositiveIntegerField(unique=True, verbose_name='RK ident')),
                ('is_sync', models.BooleanField(default=False, verbose_name='Синхронизация?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Рабочий?')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='servers', to='src.restaurant')),
                ('server_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servers', to='src.servertype', verbose_name='Тип сервера')),
            ],
            options={
                'verbose_name': 'Сервер',
                'verbose_name_plural': 'Сервера',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Имя группы')),
                ('rights', models.ManyToManyField(related_name='groups', to='src.right', verbose_name='Права')),
            ],
            options={
                'verbose_name': 'Группа доступа',
                'verbose_name_plural': 'Группы доступа',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='groups',
            field=models.ManyToManyField(related_name='employees', to='src.group', verbose_name='Группа доступа'),
        ),
    ]
